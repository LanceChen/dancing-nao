# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.04, 0.6, 1.2])
keys.append([[-0.17952, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.17952, [3, -0.186667, 0], [3, 0.2, 0]], [-0.179519, [3, -0.2, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.04, 0.6, 1.2])
keys.append([[0.024502, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.0122299, [3, -0.186667, 0], [3, 0.2, 0]], [0.024502, [3, -0.2, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0.04, 0.6, 1.2])
keys.append([[0.0904641, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.490922, [3, -0.186667, 0], [3, 0.2, 0]], [0.0904641, [3, -0.2, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0.04, 0.6, 1.2])
keys.append([[-0.136484, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.11194, [3, -0.186667, 0], [3, 0.2, 0]], [-0.136484, [3, -0.2, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.04, 0.6, 1.2])
keys.append([[-0.432546, [3, -0.0133333, 0], [3, 0.186667, 0]], [-1.2379, [3, -0.186667, 0], [3, 0.2, 0]], [-0.432547, [3, -0.2, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.04, 0.6, 1.2])
keys.append([[-1.19043, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.760906, [3, -0.186667, 0], [3, 0.2, 0]], [-1.19043, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.04, 0.6, 1.2])
keys.append([[0.3028, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.3028, [3, -0.186667, 0], [3, 0.2, 0]], [0.3028, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0.04, 0.6, 1.2])
keys.append([[0.130432, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.474048, [3, -0.186667, 0], [3, 0.2, 0]], [0.130432, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0.04, 0.6, 1.2])
keys.append([[0.136568, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.00762796, [3, -0.186667, 0], [3, 0.2, 0]], [0.136568, [3, -0.2, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0.04, 0.6, 1.2])
keys.append([[-0.174834, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.00149202, [3, -0.186667, 0], [3, 0.2, 0]], [-0.174835, [3, -0.2, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0.04, 0.6, 1.2])
keys.append([[-0.0828779, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.0689881, [3, -0.186667, 0], [3, 0.2, 0]], [-0.0828778, [3, -0.2, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.04, 0.6, 1.2])
keys.append([[1.45419, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.862066, [3, -0.186667, 0], [3, 0.2, 0]], [1.45419, [3, -0.2, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.04, 0.6, 1.2])
keys.append([[0.187106, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.0813439, [3, -0.186667, 0], [3, 0.2, 0]], [0.187106, [3, -0.2, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.04, 0.6, 1.2])
keys.append([[0.0597839, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.638186, [3, -0.186667, 0], [3, 0.2, 0]], [0.059784, [3, -0.2, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0.04, 0.6, 1.2])
keys.append([[0.0859461, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.361982, [3, -0.186667, 0], [3, 0.2, 0]], [0.0859461, [3, -0.2, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0.04, 0.6, 1.2])
keys.append([[0.136568, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.066004, [3, -0.186667, 0], [3, 0.2, 0]], [0.136568, [3, -0.2, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.04, 0.6, 1.2])
keys.append([[0.397348, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.115092, [3, -0.186667, 0], [3, 0.2, 0]], [0.397349, [3, -0.2, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.04, 0.6, 1.2])
keys.append([[1.20722, [3, -0.0133333, 0], [3, 0.186667, 0]], [1.3959, [3, -0.186667, 0], [3, 0.2, 0]], [1.20722, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.04, 0.6, 1.2])
keys.append([[0.3228, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.3228, [3, -0.186667, 0], [3, 0.2, 0]], [0.3228, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0.04, 0.6, 1.2])
keys.append([[0.141086, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.58603, [3, -0.186667, 0], [3, 0.2, 0]], [0.141086, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0.04, 0.6, 1.2])
keys.append([[-0.130348, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.141086, [3, -0.186667, 0], [3, 0.2, 0]], [-0.130348, [3, -0.2, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0.04, 0.6, 1.2])
keys.append([[-0.174834, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.00149202, [3, -0.186667, 0], [3, 0.2, 0]], [-0.174835, [3, -0.2, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0.04, 0.6, 1.2])
keys.append([[-0.0923279, [3, -0.0133333, 0], [3, 0.186667, 0]], [1.04316, [3, -0.186667, 0], [3, 0.2, 0]], [-0.0923279, [3, -0.2, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.04, 0.6, 1.2])
keys.append([[1.46655, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.372804, [3, -0.186667, 0], [3, 0.2, 0]], [1.46655, [3, -0.2, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.04, 0.6, 1.2])
keys.append([[-0.17185, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.136568, [3, -0.186667, 0], [3, 0.2, 0]], [-0.17185, [3, -0.2, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.04, 0.6, 1.2])
keys.append([[0.207048, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.18097, [3, -0.186667, 0], [3, 0.2, 0]], [0.207048, [3, -0.2, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err

