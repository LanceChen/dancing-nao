# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.17952, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.17952, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.179519, [3, -0.166667, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[0.0122299, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.0122299, [3, -0.155556, 0], [3, 0.166667, 0]], [0.0122299, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0.0333333, 0.5, 1])
keys.append([[0.0889301, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.042994, [3, -0.155556, 0], [3, 0.166667, 0]], [0.0889301, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.14262, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.082794, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.14262, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.477032, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.570606, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.477032, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[-1.15361, [3, -0.0111111, 0], [3, 0.155556, 0]], [-1.63375, [3, -0.155556, 0], [3, 0.166667, 0]], [-1.15361, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.0333333, 0.5, 1])
keys.append([[0.2948, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.2948, [3, -0.155556, 0], [3, 0.166667, 0]], [0.2948, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[0.1335, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.404934, [3, -0.155556, 0], [3, 0.166667, 0]], [0.1335, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[0.14117, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.070606, [3, -0.155556, 0], [3, 0.166667, 0]], [0.14117, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.184038, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.0506639, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.184038, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.0923279, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.558334, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.0923279, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[1.42504, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.607422, [3, -0.155556, 0], [3, 0.166667, 0]], [1.42504, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[0.176368, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.107338, [3, -0.155556, 0], [3, 0.166667, 0]], [0.176367, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[0.02757, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.02757, [3, -0.155556, 0], [3, 0.166667, 0]], [0.0275701, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0.0333333, 0.5, 1])
keys.append([[0.073674, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.329768, [3, -0.155556, 0], [3, 0.166667, 0]], [0.073674, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[0.136568, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.136568, [3, -0.155556, 0], [3, 0.166667, 0]], [0.136568, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[0.365134, [3, -0.0111111, 0], [3, 0.155556, 0]], [1.5049, [3, -0.155556, 0], [3, 0.166667, 0]], [0.365133, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[1.26858, [3, -0.0111111, 0], [3, 0.155556, 0]], [1.00166, [3, -0.155556, 0], [3, 0.166667, 0]], [1.26858, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.0333333, 0.5, 1])
keys.append([[0.318, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.318, [3, -0.155556, 0], [3, 0.166667, 0]], [0.318, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[0.138018, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.48398, [3, -0.155556, 0], [3, 0.166667, 0]], [0.138018, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.128814, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.105804, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.128814, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.184038, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.0506639, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.184038, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.0923279, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.079726, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.0923279, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[1.46655, [3, -0.0111111, 0], [3, 0.155556, 0]], [1.23184, [3, -0.155556, 0], [3, 0.166667, 0]], [1.46655, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.204064, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.168698, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.204064, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[0.228524, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.18097, [3, -0.155556, 0], [3, 0.166667, 0]], [0.228525, [3, -0.166667, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err

