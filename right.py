# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.147306, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.3636, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.147306, [3, -0.166667, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.0368581, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.019984, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.036858, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0.0333333, 0.5, 1])
keys.append([[0.0950661, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.533874, [3, -0.155556, 0], [3, 0.166667, 0]], [0.095066, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.131882, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.199378, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.131882, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.41874, [3, -0.0111111, 0], [3, 0.155556, 0]], [-1.24403, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.418739, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[-1.16588, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.952656, [3, -0.155556, 0], [3, 0.166667, 0]], [-1.16588, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.0333333, 0.5, 1])
keys.append([[0.288, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.3408, [3, -0.155556, 0], [3, 0.166667, 0]], [0.288, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[0.138102, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.463226, [3, -0.155556, 0], [3, 0.166667, 0]], [0.138102, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[0.0798099, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.280764, [3, -0.155556, 0], [3, 0.166667, 0]], [0.0798099, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.176368, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.176368, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.176367, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.0890141, [3, -0.0111111, 0], [3, 0.155556, 0]], [1.03541, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.0890141, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[1.46186, [3, -0.0111111, 0], [3, 0.155556, 0]], [1.21028, [3, -0.155556, 0], [3, 0.166667, 0]], [1.46186, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[0.159494, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.135034, [3, -0.155556, 0], [3, 0.166667, 0]], [0.159494, [3, -0.166667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[0.108872, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.86215, [3, -0.155556, 0], [3, 0.166667, 0]], [0.108872, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0.0333333, 0.5, 1])
keys.append([[0.090548, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.346726, [3, -0.155556, 0], [3, 0.166667, 0]], [0.090548, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[0.127364, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.351328, [3, -0.155556, 0], [3, 0.166667, 0]], [0.127364, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[0.423426, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.147306, [3, -0.155556, 0], [3, 0.166667, 0]], [0.423426, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[1.16426, [3, -0.0111111, 0], [3, 0.155556, 0]], [1.67662, [3, -0.155556, 0], [3, 0.166667, 0]], [1.16426, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.0333333, 0.5, 1])
keys.append([[0.2888, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.3924, [3, -0.155556, 0], [3, 0.166667, 0]], [0.2888, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[0.128814, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.29457, [3, -0.155556, 0], [3, 0.166667, 0]], [0.128814, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.0643861, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.337438, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.0643861, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.176368, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.176368, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.176367, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.0843279, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.023052, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.0843279, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.0333333, 0.5, 1])
keys.append([[1.45121, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.87749, [3, -0.155556, 0], [3, 0.166667, 0]], [1.45121, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.0333333, 0.5, 1])
keys.append([[-0.158044, [3, -0.0111111, 0], [3, 0.155556, 0]], [-0.783916, [3, -0.155556, 0], [3, 0.166667, 0]], [-0.158044, [3, -0.166667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.0333333, 0.5, 1])
keys.append([[0.075124, [3, -0.0111111, 0], [3, 0.155556, 0]], [0.849794, [3, -0.155556, 0], [3, 0.166667, 0]], [0.075124, [3, -0.166667, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err

